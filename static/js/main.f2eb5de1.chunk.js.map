{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item.status-filter/index.js","components/item.status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","SearchPanel","state","term","onSearchChange","e","target","value","setState","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","AddItem","onLabelChange","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","AddNewItem","text","newItem","toggleProperty","search","sourceArr","length","toLowerCase","includes","arr","propName","oldItem","items","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"4WAEeA,G,MCEG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACxB,OACE,yBAAKC,UAAU,qBACb,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,Y,QCNSE,G,uLCIJ,IAAD,EAOgBC,KAAKC,MALnBC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,kBACAC,EALF,EAKEA,aAIJC,EAAa,iBAUjB,OAnBM,EAMET,OAMNS,GAAc,SAZV,EAOEC,YASND,GAAc,cAId,0BAAMR,UAAWQ,GACf,0BACER,UAAU,uBACVU,QAASH,GACRH,GAGH,4BAAQO,KAAK,SACXX,UAAU,6CACVU,QAASJ,GACT,uBAAGN,UAAU,uBAGf,4BAAQW,KAAK,SACXX,UAAU,4CACVU,QAASL,GACT,uBAAGL,UAAU,wB,GAtCmBY,cCF3BC,G,MCIE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOT,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAEjDQ,EAAWD,EAAME,KAAI,SAACC,GAAU,IAE7BC,EAAoBD,EAApBC,GAAOC,EAFqB,YAERF,EAFQ,QAInC,OACE,wBAAIG,IAAKF,EAAIlB,UAAU,mBACrB,kBAAC,EAAD,iBAAkBmB,EAAlB,CACEd,UAAY,kBAAMA,EAAUa,IAC5BZ,kBAAoB,kBAAMA,EAAkBY,IAC5CX,aAAe,kBAAMA,EAAaW,WAO1C,OACE,wBAAIlB,UAAU,wBACXe,KCxBQM,G,iNCIbC,MAAQ,CACNC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAACL,SACf,EAAKpB,MAAMqB,eAAeD,I,wEAK1B,OAAQ,2BAAOZ,KAAK,OACNX,UAAU,4BACV6B,YAAY,SACZF,MAAOzB,KAAKoB,MAAMC,KAClBO,SAAU5B,KAAKsB,qB,GAlBQZ,cCF1BmB,G,iNCMbC,QAAU,CACR,CAACC,KAAM,MAAO7B,MAAO,OACrB,CAAC6B,KAAM,SAAU7B,MAAO,UACxB,CAAC6B,KAAM,OAAQ7B,MAAO,S,wEAId,IAAD,EAE6BF,KAAKC,MAAjC+B,EAFD,EAECA,OAASC,EAFV,EAEUA,eAEXH,EAAU9B,KAAK8B,QAAQhB,KAAI,YAAkB,IAAhBiB,EAAe,EAAfA,KAAM7B,EAAS,EAATA,MAEjCgC,EADWF,IAAWD,EACH,WAAa,wBACtC,OACE,4BAAStB,KAAO,SACPX,UAAS,cAAWoC,GACpBhB,IAAKa,EACLvB,QAAY,kBAAMyB,EAAeF,KAC7B7B,MAKjB,OACE,yBAAKJ,UAAU,aACZgC,O,GA9BqCpB,cCF/ByB,G,iNCIbf,MAAQ,CACNlB,MAAO,I,EAGTkC,cAAgB,SAACb,GACf,EAAKG,SAAS,CACZxB,MAAOqB,EAAEC,OAAOC,S,EAIpBY,SAAW,SAACd,GACVA,EAAEe,iBACF,EAAKrC,MAAMsC,QAAQ,EAAKnB,MAAMlB,OAC9B,EAAKwB,SAAS,CACZxB,MAAM,M,wEAKR,OACE,0BAAMJ,UAAU,uBACVuC,SAAUrC,KAAKqC,UACnB,2BAAO5B,KAAK,OACLX,UAAU,0BACV8B,SAAU5B,KAAKoC,cACfT,YAAY,0BACZF,MAAOzB,KAAKoB,MAAMlB,QACzB,4BAAQO,KAAK,SAASX,UAAU,wCAAhC,iB,GA7B6BY,c,wOCFtB8B,E,2MCYXC,MAAQ,I,EAERrB,MAAQ,CACNsB,SAAU,CACR,EAAKC,eAAe,gBACpB,EAAKA,eAAe,mBACpB,EAAKA,eAAe,iBAEtBtB,KAAM,GACNW,OAAQ,O,EAGVY,WAAa,SAAC5B,GACZ,EAAKU,UAAS,YAAsD,IAApDgB,EAAmD,EAAnDA,SAERG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAG/B,KAAOA,KAE3CgC,EAASN,EAASO,MAAM,EAAGJ,GAC3BK,EAAQR,EAASO,MAAMJ,EAAM,GAGnC,MAAO,CACLH,SAFY,sBAAOM,GAAP,YAAkBE,S,EAOpCC,WAAa,SAACC,GAEZ,IAAMC,EAAU,EAAKV,eAAeS,GAEpC,EAAK1B,UAAS,YAAiB,IAAfgB,EAAc,EAAdA,SAId,MAAO,CACLA,SAHU,sBAAOA,GAAP,CAAiBW,S,EA8BjCjD,kBAAoB,SAACY,GACnB,EAAKU,UAAS,YAAiB,IAAfgB,EAAc,EAAdA,SACd,MAAO,CACLA,SAAU,EAAKY,eAAeZ,EAAU1B,EAAI,kB,EAKlDX,aAAe,SAACW,GACd,EAAKU,UAAS,YAAmB,IAAhBgB,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKY,eAAeZ,EAAU1B,EAAI,a,EAKlDM,eAAiB,SAACD,GAChB,EAAKK,SAAS,CAACL,U,EAmBjBY,eAAiB,SAACD,GAChB,EAAKN,SAAS,CAACM,Y,EAGjBuB,OAAS,SAACC,EAAWnC,GAEnB,OAAoB,IAAhBA,EAAKoC,OACAD,EAGFA,EAAUxB,QAAO,SAACe,GACtB,OAAOA,EAAG7C,MAAMwD,cAAcC,SAAStC,EAAKqC,mB,8EArElCxD,GACb,MAAM,CACJA,QACAK,WAAW,EACXV,MAAM,EACNmB,GAAIhB,KAAKyC,W,qCAIEmB,EAAK5C,EAAK6C,GAEvB,IAAMhB,EAAMe,EAAId,WAAU,SAACC,GAAD,OAAQA,EAAG/B,KAAOA,KACtC8C,EAAUF,EAAIf,GACdQ,E,yVAAO,IAAQS,EAAR,eAAkBD,GAAYC,EAAQD,KAE7Cb,EAASY,EAAIX,MAAM,EAAGJ,GACtBK,EAAQU,EAAIX,MAAMJ,EAAM,GAE9B,MAAM,GAAN,mBAAWG,GAAX,CAAmBK,GAAnB,YAA+BH,M,6BAyB1Ba,EAAO/B,GAEZ,OAAQA,GACN,IAAK,MACH,OAAO+B,EACT,IAAK,SACH,OAAOA,EAAM/B,QAAQ,SAACjB,GAAD,OAAWA,EAAKlB,QACvC,IAAK,OACH,OAAOkE,EAAM/B,QAAO,SAACjB,GAAD,OAAUA,EAAKlB,QAErC,QACE,OAAOkE,K,+BAqBL,IAAD,EAE0B/D,KAAKoB,MAA/BsB,EAFA,EAEAA,SAAUrB,EAFV,EAEUA,KAAMW,EAFhB,EAEgBA,OAEjBgC,EAAehE,KAAKgC,OAAOhC,KAAKuD,OAAOb,EAAUrB,GAAMW,GACvDiC,EAAYvB,EAASV,QAAO,SAACe,GAAD,OAAQA,EAAGlD,QAAM4D,OAC7CS,EAAYxB,EAASe,OAASQ,EAEpC,OACE,yBAAKnE,UAAY,YACf,kBAAC,EAAD,CAAWF,KAAMsE,EACNrE,KAAQoE,IACnB,yBAAKnE,UAAY,oBACf,kBAAC,EAAD,CAAawB,eAAkBtB,KAAKsB,iBACpC,kBAAC,EAAD,CAAkBU,OAAQA,EACRC,eAAkBjC,KAAKiC,kBAE3C,kBAAC,EAAD,CAAUrB,MAASoD,EACT7D,UAAaH,KAAK4C,WAClBxC,kBAAqBJ,KAAKI,kBAC1BC,aAAgBL,KAAKK,eAC/B,kBAAC,EAAD,CAAUkC,QAAWvC,KAAKmD,kB,GA5IDzC,aCNjCyD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f2eb5de1.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className='app-header d-flex'>\r\n      <h1>Todo list</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render(){\r\n\r\n    const { label, \r\n            onDeleted, \r\n            onToggleImportant, \r\n            onToggleDone, \r\n            done, \r\n            important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n\r\n    if(done){\r\n      classNames += ' done';\r\n    }\r\n\r\n    if(important){\r\n      classNames += ' important';\r\n    };\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className='todo-list-item-label'\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type='button'\r\n          className='btn btn-outline-success btn-sm float-right'\r\n          onClick={onToggleImportant}>\r\n          <i className='fa fa-exclamation' />\r\n        </button>\r\n\r\n        <button type='button'\r\n          className='btn btn-outline-danger btn-sm float-right'\r\n          onClick={onDeleted}>\r\n          <i className='fa fa-trash-o' />\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n};\r\n\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from \"../todo-list-item\";\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n\r\n    const {id, ...itemProps} = item;\r\n\r\n    return (\r\n      <li key={id} className='list-group-item'> \r\n        <TodoListItem {...itemProps}\r\n          onDeleted={ () => onDeleted(id)}\r\n          onToggleImportant={ () => onToggleImportant(id)}\r\n          onToggleDone={ () => onToggleDone(id)}\r\n          /* label={item.label}\r\n          important={item.important} */ />\r\n      </li> \r\n    );\r\n  });\r\n\r\n  return ( \r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList; ","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render(){\r\n\r\n    return( <input type=\"text\" \r\n                  className='form-control search-input'\r\n                  placeholder='search'\r\n                  value={this.state.term} \r\n                  onChange={this.onSearchChange}/>\r\n    );\r\n\r\n  };\r\n};\r\n\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n \r\n  \r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'}, \r\n    {name: 'done', label: 'Done'},\r\n  ];\r\n \r\n\r\n  render() {\r\n\r\n    const { filter , onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label})=>{\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        < button type = 'button'\r\n                 className = {`btn ${clazz}`}\r\n                 key={name}\r\n                 onClick = { () => onFilterChange(name) }>\r\n                    {label} \r\n                </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='btn-group'>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\n","import AddItem from \"./add-item\";\r\n\r\nexport default AddItem;","import React, {Component} from 'react';\r\n\r\nimport './add-item.css';\r\n\r\nexport default class AddItem extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n  \r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n  \r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAdded(this.state.label);\r\n    this.setState({\r\n      label:''\r\n    });\r\n  };\r\n  \r\n  render(){\r\n    return (\r\n      <form className='item-add-form d-flex'\r\n            onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n               className='form-control text-field'\r\n               onChange={this.onLabelChange}\r\n               placeholder='What do you want to do?'\r\n               value={this.state.label}/>\r\n        <button type='submit' className='btn btn-outline-secondary add-button'>\r\n          Add item\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\n","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport TodoList from \"../todo-list\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item.status-filter\";\r\nimport AddItem from '../add-item';\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n      todoData: [\r\n        this.createTodoItem('Drink coffee'),\r\n        this.createTodoItem('Make awesom app'),\r\n        this.createTodoItem('Have a lanch'),\r\n      ],\r\n      term: '',\r\n      filter: 'all', // all, active, done\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n      this.setState(({todoData /* = state.todoData деструктизовано */})=>{\r\n        \r\n        const idx = todoData.findIndex((el) => el.id === id );\r\n  \r\n        const before = todoData.slice(0, idx);\r\n        const after = todoData.slice(idx + 1);\r\n  \r\n        const newArray = [...before, ...after];\r\n        return {\r\n          todoData: newArray\r\n        };\r\n      });\r\n    };\r\n\r\n    AddNewItem = (text) => {\r\n\r\n      const newItem = this.createTodoItem(text);\r\n\r\n      this.setState(({todoData}) => {\r\n        \r\n        const newArr = [...todoData, newItem];\r\n\r\n        return {\r\n          todoData: newArr\r\n        };\r\n      });\r\n    };\r\n\r\n    createTodoItem(label){\r\n      return{\r\n        label,\r\n        important: false,\r\n        done: false,\r\n        id: this.maxId++\r\n      }\r\n    };\r\n\r\n    toggleProperty(arr, id , propName){\r\n    \r\n      const idx = arr.findIndex((el) => el.id === id);\r\n      const oldItem = arr[idx];\r\n      const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n      const before = arr.slice(0, idx);\r\n      const after = arr.slice(idx + 1);\r\n      \r\n      return [...before, newItem, ...after];\r\n        \r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n      this.setState(({todoData}) => {\r\n        return {\r\n          todoData: this.toggleProperty(todoData, id, 'important')\r\n        };\r\n      });\r\n    };\r\n    \r\n    onToggleDone = (id) => {\r\n      this.setState(({ todoData }) => {\r\n        return {\r\n          todoData: this.toggleProperty(todoData, id, 'done')\r\n        };\r\n      });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n      this.setState({term});\r\n    };\r\n\r\n\r\n    filter(items, filter) {\r\n\r\n      switch (filter) {\r\n        case 'all':\r\n          return items;\r\n        case 'active':\r\n          return items.filter( (item) => !item.done);\r\n        case 'done':\r\n          return items.filter((item) => item.done);\r\n      \r\n        default:\r\n          return items;\r\n      };\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n      this.setState({filter});\r\n    };\r\n\r\n    search = (sourceArr, term) => {\r\n\r\n      if (term.length === 0) {\r\n        return sourceArr;\r\n      }\r\n\r\n      return sourceArr.filter((el) => {\r\n         return el.label.toLowerCase().includes(term.toLowerCase())\r\n      });\r\n    };\r\n    \r\n\r\n\r\n  render() {\r\n\r\n    const {todoData, term, filter} = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term),filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className = 'todo-app'>\r\n        <AppHeader toDo={todoCount} \r\n                   done = {doneCount}/>\r\n        <div className = 'top-panel d-flex'>\r\n          <SearchPanel onSearchChange = {this.onSearchChange}/>\r\n          <ItemStatusFilter filter={filter} \r\n                            onFilterChange = {this.onFilterChange} />\r\n        </div>\r\n        <TodoList todos = {visibleItems} \r\n                  onDeleted = {this.deleteItem}\r\n                  onToggleImportant = {this.onToggleImportant}\r\n                  onToggleDone = {this.onToggleDone}/>\r\n        <AddItem  onAdded = {this.AddNewItem} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}